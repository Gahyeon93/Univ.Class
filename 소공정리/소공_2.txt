<Critical Systems>

p.4
크게 세가지로 분류. 사용하는 프로그램이 죽으면 불편한 정도. 근데 critical같은 경우에는 경제적으로나 물리적으로 데미지를 받는 시스템을 말함.
safty- 화학 등.
mission-우주관련산업 등. 큰 돈.
business-
(나누긴 했는데 세가지가 있다고만 생각하지 말길.)
5:18

p.5 가장 중요한 "의존성" (잠깐.. 시험은 영어. 답도 영어로.스펠링은 ㄱㅊ.명사형용사는주의 한글은 번역서 기준.(해석쓸땐 주의))
예를 들면..'자율운전' google에서도 관심. 얼마나 믿는지가 중요하지. 이건 영상처리분야가 핵심.딥러닝

11:10
p.6

12:00
p.7 개발방법
ex)약개발 ; 쥐 등 -> 임상실험
기업은 cost effective 개발.
 스마트폰 99% 10만 vs 99.999% 100만
 자율주행차 99% 100만 vs 99.999% 1000만

18:20
p.8 발생할 수 잇는 문제
1. 하드웨어 문제 - HDD 문제 등
2. 소프트웨어 문제
3. 인간의 실수 - 시스템을 다룰 때 메뉴얼을 따르지 않을 때 등.

21:25
p.9 정리
의존성이 중요하다. 책에서는(3.1장) 인슐린펌프..당뇨병환자에게 일정 시간마다 양 투여.를 예로 들음

24:50
p.10 (continue)
p.11 data flow (팀별발표에서 이런 그림 & 영양가있는 정보들 같이 소개..)

32:50
p.12 
system은 필요할 때 인슐린을 제공해아한다.
system은 deliver하고 정확한 값.
초과X
이 외에도 더 생각할 수 있음.

34:22
p.13
35:20
p,14
availability : 시스템은 요청할 때 바로 작동해야함.
reliability : ....(못들음.) 'specified'; 개발자와 사용자가 다를 때,,spec이 잘못될 수도 있음. 음..(삭제)
safety : ex ) 시스템이 잘못 동작했을 때도 안전해야.../ 인슐린이든 핵발전이든..최악의 상황
security :  외부적 공격에 대한 방어.

40:00
p.15
앞에 네개가 핵심적인 것이고 이외에 네가지 더.
repairability : 
m~ : 유지보수.
s~ : 공격에 대해 망가져도 최소한의 서비스는 가능해야.
error : 이건 .... 외부인의 오픈소스를 보면 return value 중요. 논리적 오류 등 중간중간 다 확인되어야. 그래야 산업적으로 준비된 것.

p.16 pass

47:10 잠깐 시험얘기 : 괄호넣기...p.17에서 예를 들면 "survivavility" 단어쓰기라면 영어설명->답: survivavility
48:25
p.17 
문제가 발생했을 때 사용자에게 어느정도 서비스가 가능한지. 뭐 금융서비스 등.

49:50
p.18
의존성을 높여야 한다는 것은 앞에 있는 요소들을 높이는 것. but 그럼 performance는 떨어짐. 에러체크 등은 다 느리지는 것. 동일한 성능을 내기 위해서는 돈을 더 투자해야.
p.19
exponentially 증가.. p.20 그림 : y축은 비용.
 critical말고 일반적인 얘기 해보자면...나중에 프로젝트를 맡았을 때, 에러체크하는 시간도 기간에 반드시 고려해야함. 개발 퍼센테이지..
의존성을 높이기 위해서는 어떻게 구현할까? 대표적인 것은 중복설계. 인슐린 경우 센서를 여러개 달아서 평균내기.
중복설계 -> 퍼포먼스 증가. 복잡도는 exponential로 증가할 수도.

1:00:10
p.21
ex...멀티쓰레드 버그 잡기 힘든데....->개발자체가 어려워져...

1:04:30
p.22
주어진 시간 안에. failure-free
ex)smoke free 
availability : 시간안에 원하는 결과..?
두개 미세하게 다름. (?다시듣기)
소공과 멀지만 하나 말해주면 -> '정량적'으로 보고를 해야함. 오류가 날 확률이 ~%입니다. 등.























